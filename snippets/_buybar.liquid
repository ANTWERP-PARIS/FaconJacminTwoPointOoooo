<!-- HTML -->
<div id="buybar" class=""> 

  <div class="left between">
    <div class="size"> 
      <div class="guide">Size guide</div>
    </div>
    <div class="price"> 
        <div class="no-js-hidden" id="price-{{ section.id }}">
            {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
        </div>
        {%- if shop.taxes_included or shop.shipping_policy.body != blank -%}
            <div class="product__tax caption rte">
            {%- if shop.taxes_included -%}
                {{ 'products.product.include_taxes' | t }}
            {%- endif -%}
            {%- if shop.shipping_policy.body != blank -%}
                {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
            {%- endif -%}
            </div>
        {%- endif -%}
        <div>
            {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            {{ form | payment_terms }}
            {%- endform -%}
        </div>
    </div>
  </div>

  <div class="right">
    <product-form class="product-form add display">
        <div class="product-form__error-message-wrapper" role="alert" hidden>
          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-error" viewBox="0 0 13 13">
            <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
            <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
            <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
            <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
          </svg>
          <span class="product-form__error-message"></span>
        </div>

        {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" disabled>
          <div class="product-form__buttons">
            <button
              type="submit"
              name="add"
              class="product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}button--secondary{% else %}button--primary{% endif %}"
            {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
            >
                <span>
                  {%- if product.selected_or_first_available_variant.available -%}
                    {{ 'products.product.add_to_cart' | t }}
                  {%- else -%}
                    {{ 'products.product.sold_out' | t }}
                  {%- endif -%}
                </span>
                <div class="loading-overlay__spinner hidden">
                  <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                    <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                  </svg>
                </div>
            </button>
          </div>
        {%- endform -%}
      </product-form>

      <button class="chat-button help"><span>Help</span><i class="fa-solid fa-comment-question"></i></button>
  </div>
</div>



<!-- CSS -->
{%- style -%}
#buybar, #buybar.left, #buybar .right {
  height: 79px !important;
}

#buybar {
  @media screen and (max-width: 750px) {
    height: 159px !important;
  }
}

#buybar.passed {
  bottom: -80px;

  @media screen and (max-width: 750px) {
    bottom: -160px;
  }
}

#buybar {
  display: flex;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;

  z-index: 10;
  background: white;

  transition: bottom .4s;
}

#buybar .left, #buybar .right {
  width: 50%;

  @media screen and (max-width: 750px) {
    width: 100%;
  }
}

#buybar .left {
  padding: 0 10px !important;
  justify-content: space-between;
}

#buybar .left, #buybar .left .size, #buybar .left .price {
    box-sizing: border-box;
    display: flex;
    flex-wrap: wrap;
}

{%- endstyle -%}



<!-- JS -->
<script>
// Element exists
$.fn.alive = function() {
    return this.length>0;
}

// Element is the window
$.fn.isWindow = function() {
    let
        t = Object.prototype.toString.call(this[0]),
        a = ['[object DOMWindow]','[object Window]','[object global]'];

    return _.indexOf(a,t)>-1 ? true : false;
}

// Element is in view
$.fn.inView = function() {
    let
        t = $(this),
        w = $(window),

        elt = t.offset().top,
        elb = elt + t.outerHeight(),
        vpt = w.scrollTop(),
        vpb = vpt + w.height();

    return elb > vpt && elt < vpb;
}



// Scroll logic
let buybar = $('#buybar');
$(window).on('scroll', function(e) {
    let p = $('.product-recommendations');
    
    if(p.alive() && buybar.alive())
        p.inView() ? 
            buybar.addClass('passed') : 
            buybar.removeClass('passed');
});
$(window).trigger('scroll');



// Tidio
(function() {
    function onTidioChatApiReady() {
        window.tidioChatApi.hide();
        window.tidioChatApi.on("close", function() {
        window.tidioChatApi.hide();
        });
    }

    if (window.tidioChatApi) {
        window.tidioChatApi.on("ready", onTidioChatApiReady);
    } else {
        document.addEventListener("tidioChat-ready", onTidioChatApiReady);
    }

    document.querySelector(".chat-button").addEventListener("click", function() {
        window.tidioChatApi.show();
        window.tidioChatApi.open();
    });
})();
</script>